{"version":3,"sources":["features/userSlice.js","components/Login.jsx","components/Logout.jsx","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","useState","setName","password","setPassword","dispatch","useDispatch","className","onSubmit","e","preventDefault","loggedIn","handleSubmit","type","placeholder","value","onChange","target","Logout","useSelector","onClick","handleLogout","App","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"iOACaA,EAAYC,YAAY,CACjCC,KAAK,OACLC,aAAa,CACTC,KAAK,MAETC,SAAS,CACLC,MAAO,SAACC,EAAOC,GACXD,EAAMH,KAAOI,EAAOC,SAExBC,OAAO,SAACH,GACJA,EAAMH,KAAO,SAMlB,EAAwBJ,EAAUW,QAA3BL,EAAP,EAAOA,MAAOI,EAAd,EAAcA,OACRE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,M,GAEjCJ,EAAf,Q,MCwBea,EAtCD,WACV,MAAwBC,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAGMC,EAAYC,cAUlB,OACI,qBAAKC,UAAU,QAAf,SACI,uBAAMA,UAAU,aAAaC,SAAU,SAACC,GAAD,OAV1B,SAACA,GAClBA,EAAEC,iBACFL,EAASZ,EAAM,CACXJ,KAAKA,EACLc,SAASA,EACTQ,UAAS,KAKqCC,CAAaH,IAA3D,UACI,0DACA,uBAAOF,UAAU,UAAUM,KAAK,OAC5BC,YAAY,iCACZC,MAAO1B,EACP2B,SAAU,SAACP,GAAD,OAAOP,EAAQO,EAAEQ,OAAOF,UAEtC,uBAAOR,UAAU,UAAUM,KAAK,WAC5BC,YAAY,uCACZC,MAAOZ,EACPa,SAAU,SAACP,GAAD,OAAOL,EAAYK,EAAEQ,OAAOF,UAE1C,wBAAQF,KAAK,SAASN,UAAU,cAAhC,kDCdDW,G,YAfA,WACX,IAAM3B,EAAO4B,YAAYpB,GACnBM,EAAWC,cAKjB,OACI,sBAAMC,UAAW,SAAjB,UACG,6GAAmB,sBAAMA,UAAW,cAAjB,SAAgChB,EAAKF,UACxD,wBAAQkB,UAAW,iBAAiBa,QAAU,SAACX,GAAD,OAPhC,SAACA,GAClBA,EAAEC,iBACFL,EAASR,KAK+CwB,CAAaZ,IAAlE,iDCEIa,MAVf,WACA,IAAM/B,EAAO4B,YAAYpB,GACvB,OACE,qBAAKQ,UAAU,MAAf,SACGhB,EAAO,cAAC,EAAD,IAAY,cAAC,EAAD,OCRXgC,cAAe,CAC1BC,QAAQ,CACJjC,KAAMJ,EAAUqC,WCCxBC,IAASC,OACP,cAAC,IAAD,CAAUC,MAASA,EAAnB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec231062.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const userSlice = createSlice({\r\n    name:'user',\r\n    initialState:{\r\n        user:null\r\n    },\r\n    reducers:{\r\n        login: (state, action) =>{\r\n            state.user = action.payload;\r\n        },\r\n        logout:(state) =>{\r\n            state.user = null;\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport const {login, logout} = userSlice.actions;\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Login.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport {login} from '../features/userSlice'\r\n\r\nconst Login = () => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n\r\n    const dispatch  = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({\r\n            name:name,\r\n            password:password,\r\n            loggedIn:true,\r\n        }))\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <form className='login_form' onSubmit={(e) => handleSubmit(e)}>\r\n                <h1>Вход</h1>\r\n                <input className='inputig' type='name'\r\n                    placeholder='логин'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <input className='inputig' type='password'\r\n                    placeholder='пароль'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button type='submit' className='submit__btn'>\r\n                    Войти\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport {  logout, selectUser } from '../features/userSlice';\r\nimport './Logout.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Logout = () => {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(logout());\r\n    }\r\n    return (\r\n        <div  className ='logout'>\r\n           <h1>Приветствуем ! <span className ='user__login'>{user.name}</span></h1> \r\n           <button className ='logout__button' onClick ={(e) => handleLogout(e)}>Выйти</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React from 'react';\nimport Login from './components/Login';\nimport './App.css';\nimport { selectUser } from './features/userSlice';\nimport Logout from './components/Logout';\nimport {useSelector} from 'react-redux';\n\n\nfunction App() {\nconst user = useSelector(selectUser);\n  return (\n    <div className='App'>\n      {user ? <Logout/> : <Login/>}\n    </div>\n\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { userSlice } from \"../features/userSlice\";\r\n\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        user: userSlice.reducer\r\n    },\r\n});","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}